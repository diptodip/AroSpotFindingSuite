function convertWormFitFile1p4To2p0(old,prefix)

versionName='v2.0';
worms=cell(size(old.worms,2),1);
exactSame={'numberOfPlanes','cutoffStat','cutoffStatisticValue','cutoffPercentile','regMaxSpots','goodWorm'};
wormFitFileName=[prefix '_wormGaussianFit.mat'];
if ~exist(wormFitFileName,'file')
    for iWorm=1:size(worms,1)
        worms{iWorm}.segStackFile=[prefix '_SegStacks.mat'];
        worms{iWorm}.version=versionName;
        worms{iWorm}.functionVersion={mfilename; versionName; datestr(now)};
        for i=1:length(exactSame)
            worms{iWorm}.(exactSame{i})=old.worms{iWorm}.(exactSame{i});
        end;
        worms{iWorm}.bleachFactors=old.worms{iWorm}.bleachFactors';
        %spotDataVectors
        %First set them up
        nSpots=size(old.worms{iWorm}.spotInfo,2);
        size1s={ 'rawValue',...
            'filteredValue',...
            'spotRank',...
            'spotInfoNumberInWorm',...
            'intensity',...
            'rawIntensity',...
            'totalHeight',...
            'sigmax',...
            'sigmay',...
            'estimatedFloor',...
            'rmse',...
            'shrunkenRsquared',...
            'scmse',...
            'scnmse',...
            'scrmse',...
            'scnrmse',...
            'scmae',...
            'scmare',...
            'scr',...
            'scd',...
            'sce',...
            'prctile_10',...
            'prctile_20',...
            'prctile_30',...
            'prctile_40',...
            'prctile_50',...
            'prctile_60',...
            'prctile_70',...
            'prctile_80',...
            'prctile_90',...
            'threeDness',...
            'raw_center',...
            'fraction_center',...
            'raw_plusSign',...
            'fraction_plusSign',...
            'raw_3box',...
            'fraction_3box',...
            'raw_5star',...
            'fraction_5star',...
            'raw_5box',...
            'fraction_5box',...
            'raw_7star',...
            'fraction_7star',...
            'raw_3ring',...
            'fraction_3ring',...
            'total_area'};
        
        worms{iWorm}.spotDataVector =struct;
        for iField=1:length(size1s)
            worms{iWorm}.spotDataVector.(size1s{iField})=zeros(nSpots,1);
        end;
        worms{iWorm}.spotDataVector.locationStack=zeros(nSpots,3);
        worms{iWorm}.spotDataVector.dataMat=zeros(nSpots,7,7);
        worms{iWorm}.spotDataVector.dataFit=zeros(nSpots,7,7);
        
        %Now go through and assign them
        for iSpot=1:nSpots
            spotInfo=old.worms{iWorm}.spotInfo{iSpot};
            worms{iWorm}.spotDataVector.locationStack(iSpot,:)=spotInfo.locations.stack;
            worms{iWorm}.spotDataVector.spotInfoNumberInWorm(iSpot)=iSpot;
            worms{iWorm}.spotDataVector.rawValue(iSpot)=spotInfo.rawValue;
            worms{iWorm}.spotDataVector.filteredValue(iSpot)=spotInfo.filteredValue;
            worms{iWorm}.spotDataVector.spotRank(iSpot)=spotInfo.spotRank;
            worms{iWorm}.spotDataVector.dataMat(iSpot,:,:)=spotInfo.dataMat;
            worms{iWorm}.spotDataVector.dataFit(iSpot,:,:)=spotInfo.stat.statValues.dataFit;
            for iF=5:length(size1s)
                worms{iWorm}.spotDataVector.(size1s{iF})=spotInfo.stat.statValues.(size1s{iF});
            end;
        end;
    end;
    save(wormFitFileName,'worms');
    disp([wormFitFileName ' converted']);
else
    disp([wormFitFileName ' already exists']);
end;

end
